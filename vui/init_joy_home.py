'''
Utility module to help with setting up the initial contents of the
JOY_HOME directory.

These contents are kept in this Python module as a base64-encoded zip
file, so you can just do, e.g.:

    import init_joy_home
    init_joy_home.initialize(JOY_HOME)

'''
import base64, os, StringIO, zipfile


def initialize(joy_home):
    Z.extractall(joy_home)


def create_data(from_dir='./default_joy_home'):
    f = StringIO.StringIO()
    z = zipfile.ZipFile(f, mode='w')
    for fn in os.listdir(from_dir):
        from_fn = os.path.join(from_dir, fn)
        z.write(from_fn, fn)
    z.close()
    return base64.encodestring(f.getvalue())


Z = zipfile.ZipFile(StringIO.StringIO(base64.decodestring('''\
UEsDBBQAAAAAAEZ8d0wvSEGjCgAAAAoAAAAHAAAAbG9nLnR4dEpveXB5IGxvZwpQSwMEFAAAAAAA
J1t3THd/ml4DAAAAAwAAAAwAAABzdGFjay5waWNrbGUodC5QSwMEFAAAAAAAjXx3TO0tgYRBFQAA
QRUAAAoAAABsaWJyYXJ5LnB5JycnClRoaXMgZmlsZSBpcyBleGVjZmlsZSgpJ2Qgd2l0aCBhIG5h
bWVzcGFjZSBjb250YWluaW5nOgoKICBEIC0gdGhlIEpveSBkaWN0aW9uYXJ5CiAgZCAtIHRoZSBE
aXNwbGF5IG9iamVjdAogIHB0IC0gdGhlIFBlcnNpc3RUYXNrIG9iamVjdAogIGxvZyAtIHRoZSBs
b2cudHh0IHZpZXdlcgogIGxvb3AgLSB0aGUgVGhlTG9vcCBtYWluIGxvb3Agb2JqZWN0CiAgc3Rh
Y2tfaG9sZGVyIC0gdGhlIFB5dGhvbiBsaXN0IG9iamVjdCB0aGF0IGhvbGRzIHRoZSBKb3kgc3Rh
Y2sgdHVwbGUKICB3b3JsZCAtIHRoZSBKb3kgZW52aXJvbm1lbnQKCicnJwpmcm9tIGpveS5saWJy
YXJ5IGltcG9ydCAoCiAgICBEZWZpbml0aW9uV3JhcHBlciwKICAgIEZ1bmN0aW9uV3JhcHBlciwK
ICAgIFNpbXBsZUZ1bmN0aW9uV3JhcHBlciwKICAgICkKZnJvbSBqb3kudXRpbHMuc3RhY2sgaW1w
b3J0IGxpc3RfdG9fc3RhY2ssIHB1c2hiYWNrCmltcG9ydCBjb3JlLCB0ZXh0X3ZpZXdlciwgc3Rh
Y2tfdmlld2VyCgoKZGVmIGluc3RhbGwoY29tbWFuZCk6IERbY29tbWFuZC5uYW1lXSA9IGNvbW1h
bmQKCgpAaW5zdGFsbApAU2ltcGxlRnVuY3Rpb25XcmFwcGVyCmRlZiBsaXN0X3Jlc291cmNlcyhz
dGFjayk6CiAgICAnJycKICAgIFB1dCBhIHN0cmluZyBvbiB0aGUgc3RhY2sgd2l0aCB0aGUgbmFt
ZXMgb2YgYWxsIHRoZSBrbm93biByZXNvdXJjZXMKICAgIG9uZS1wZXItbGluZS4KICAgICcnJwog
ICAgcmV0dXJuICdcbicuam9pbihwdC5zY2FuKCkpLCBzdGFjawoKCkBpbnN0YWxsCkBTaW1wbGVG
dW5jdGlvbldyYXBwZXIKZGVmIG9wZW5fc3RhY2soc3RhY2spOgogICAgJycnCiAgICBHaXZlbiBh
IGNvb3JkaW5hdGUgcGFpciBbeCB5XSAoaW4gcGl4ZWxzKSBvcGVuIGEgU3RhY2tWaWV3ZXIgdGhl
cmUuCiAgICAnJycKICAgICh4LCAoeSwgXykpLCBzdGFjayA9IHN0YWNrCiAgICBWID0gZC5vcGVu
X3ZpZXdlcih4LCB5LCBzdGFja192aWV3ZXIuU3RhY2tWaWV3ZXIpCiAgICBWLmRyYXcoKQogICAg
cmV0dXJuIHN0YWNrCgoKQGluc3RhbGwKQFNpbXBsZUZ1bmN0aW9uV3JhcHBlcgpkZWYgb3Blbl9y
ZXNvdXJjZShzdGFjayk6CiAgICAnJycKICAgIEdpdmVuIGEgY29vcmRpbmF0ZSBwYWlyIFt4IHld
IChpbiBwaXhlbHMpIGFuZCB0aGUgbmFtZSBvZiBhIHJlc291cmNlCiAgICAoZnJvbSBsaXN0X3Jl
c291cmNlcyBjb21tYW5kKSBvcGVuIGEgdmlld2VyIG9uIHRoYXQgcmVzb3VyY2UgYXQgdGhhdAog
ICAgbG9jYXRpb24uCiAgICAnJycKICAgICgoeCwgKHksIF8pKSwgKG5hbWUsIHN0YWNrKSkgPSBz
dGFjawogICAgb20gPSBjb3JlLk9wZW5NZXNzYWdlKHdvcmxkLCBuYW1lKQogICAgZC5icm9hZGNh
c3Qob20pCiAgICBpZiBvbS5zdGF0dXMgPT0gY29yZS5TVUNDRVNTOgogICAgICAgIFYgPSBkLm9w
ZW5fdmlld2VyKHgsIHksIHRleHRfdmlld2VyLlRleHRWaWV3ZXIpCiAgICAgICAgVi5jb250ZW50
X2lkLCBWLmxpbmVzID0gb20uY29udGVudF9pZCwgb20udGhpbmcKICAgICAgICBWLmRyYXcoKQog
ICAgcmV0dXJuIHN0YWNrCgoKQGluc3RhbGwKQFNpbXBsZUZ1bmN0aW9uV3JhcHBlcgpkZWYgbmFt
ZV92aWV3ZXIoc3RhY2spOgogICAgJycnCiAgICBHaXZlbiBhIHN0cmluZyBuYW1lIG9uIHRoZSBz
dGFjaywgaWYgdGhlIGN1cnJlbnRseSBmb2N1c2VkIHZpZXdlciBpcwogICAgYW5vbnltb3VzLCBu
YW1lIHRoZSB2aWV3ZXIgYW5kIHBlcnNpc3QgaXQgaW4gdGhlIHJlc291cmNlIHN0b3JlIHVuZGVy
CiAgICB0aGF0IG5hbWUuCiAgICAnJycKICAgIG5hbWUsIHN0YWNrID0gc3RhY2sKICAgIGFzc2Vy
dCBpc2luc3RhbmNlKG5hbWUsIHN0ciksIHJlcHIobmFtZSkKICAgIGlmIGQuZm9jdXNlZF92aWV3
ZXIgYW5kIG5vdCBkLmZvY3VzZWRfdmlld2VyLmNvbnRlbnRfaWQ6CiAgICAgICAgZC5mb2N1c2Vk
X3ZpZXdlci5jb250ZW50X2lkID0gbmFtZQogICAgICAgIHBtID0gY29yZS5QZXJzaXN0TWVzc2Fn
ZSh3b3JsZCwgbmFtZSwgdGhpbmc9ZC5mb2N1c2VkX3ZpZXdlci5saW5lcykKICAgICAgICBkLmJy
b2FkY2FzdChwbSkKICAgICAgICBkLmZvY3VzZWRfdmlld2VyLmRyYXdfbWVudSgpCiAgICByZXR1
cm4gc3RhY2sKCgojI0BpbnN0YWxsCiMjQFNpbXBsZUZ1bmN0aW9uV3JhcHBlcgojI2RlZiBwZXJz
aXN0X3ZpZXdlcihzdGFjayk6CiMjICAgIGlmIHNlbGYuZm9jdXNlZF92aWV3ZXI6CiMjICAgICAg
ICAKIyMgICAgICAgIHNlbGYuZm9jdXNlZF92aWV3ZXIuY29udGVudF9pZCA9IG5hbWUKIyMgICAg
ICAgIHNlbGYuZm9jdXNlZF92aWV3ZXIuZHJhd19tZW51KCkKIyMgICAgcmV0dXJuIHN0YWNrCgoK
QGluc3RhbGwKQFNpbXBsZUZ1bmN0aW9uV3JhcHBlcgpkZWYgaW5zY3JpYmUoc3RhY2spOgogICAg
JycnCiAgICBDcmVhdGUgYSBuZXcgSm95IGZ1bmN0aW9uIGRlZmluaXRpb24gaW4gdGhlIEpveSBk
aWN0aW9uYXJ5LiAgQQogICAgZGVmaW5pdGlvbiBpcyBnaXZlbiBhcyBhIHN0cmluZyB3aXRoIGEg
bmFtZSBmb2xsb3dlZCBieSBhIGRvdWJsZQogICAgZXF1YWwgc2lnbiB0aGVuIG9uZSBvciBtb3Jl
IEpveSBmdW5jdGlvbnMsIHRoZSBib2R5LiBmb3IgZXhhbXBsZToKCiAgICAgICAgc3FyID09IGR1
cCBtdWwKCiAgICBJZiB5b3Ugd2FudCB0aGUgZGVmaW5pdGlvbiB0byBwZXJzaXN0IG92ZXIgcmVz
dGFydHMsIGVudGVyIGl0IGludG8KICAgIHRoZSBkZWZpbml0aW9ucy50eHQgcmVzb3VyY2UuCiAg
ICAnJycKICAgIGRlZmluaXRpb24sIHN0YWNrID0gc3RhY2sKICAgIERlZmluaXRpb25XcmFwcGVy
LmFkZF9kZWYoZGVmaW5pdGlvbiwgRCkKICAgIHJldHVybiBzdGFjawoKCkBpbnN0YWxsCkBTaW1w
bGVGdW5jdGlvbldyYXBwZXIKZGVmIG9wZW5fdmlld2VyKHN0YWNrKToKICAgICcnJwogICAgR2l2
ZW4gYSBjb29yZGluYXRlIHBhaXIgW3ggeV0gKGluIHBpeGVscykgYW5kIGEgc3RyaW5nLCBvcGVu
IGEgbmV3CiAgICB1bm5hbWVkIHZpZXdlciBvbiB0aGF0IHN0cmluZyBhdCB0aGF0IGxvY2F0aW9u
LgogICAgJycnCiAgICAoKHgsICh5LCBfKSksIChjb250ZW50LCBzdGFjaykpID0gc3RhY2sKICAg
IFYgPSBkLm9wZW5fdmlld2VyKHgsIHksIHRleHRfdmlld2VyLlRleHRWaWV3ZXIpCiAgICBWLmxp
bmVzID0gY29udGVudC5zcGxpdGxpbmVzKCkKICAgIFYuZHJhdygpCiAgICByZXR1cm4gc3RhY2sK
CgpAaW5zdGFsbApAU2ltcGxlRnVuY3Rpb25XcmFwcGVyCmRlZiBnb29kX3ZpZXdlcl9sb2NhdGlv
bihzdGFjayk6CiAgICAnJycKICAgIExlYXZlIGEgY29vcmRpbmF0ZSBwYWlyIFt4IHldIChpbiBw
aXhlbHMpIG9uIHRoZSBzdGFjayB0aGF0IHdvdWxkCiAgICBiZSBhIGdvb2QgbG9jYXRpb24gYXQg
d2hpY2ggdG8gb3BlbiBhIG5ldyB2aWV3ZXIuICAoVGhlIGhldXJpc3RpYwogICAgZW1wbG95ZWQg
aXMgdG8gdGFrZSB1cCB0aGUgYm90dG9tIGhhbGYgb2YgdGhlIGN1cnJlbnRseSBvcGVuIHZpZXdl
cgogICAgd2l0aCB0aGUgZ3JlYXRlc3QgYXJlYS4pCiAgICAnJycKICAgIHZpZXdlcnMgPSBsaXN0
KGQuaXRlcl92aWV3ZXJzKCkpCiAgICBpZiB2aWV3ZXJzOgogICAgICAgIHZpZXdlcnMuc29ydChr
ZXk9bGFtYmRhIChWLCB4LCB5KTogVi53ICogVi5oKQogICAgICAgIFYsIHgsIHkgPSB2aWV3ZXJz
Wy0xXQogICAgICAgIGNvb3JkcyA9ICh4ICsgMSwgKHkgKyBWLmggLyAyLCAoKSkpCiAgICBlbHNl
OgogICAgICAgIGNvb3JkcyA9ICgwLCAoMCwgKCkpKQogICAgcmV0dXJuIGNvb3Jkcywgc3RhY2sK
CgpAaW5zdGFsbApARnVuY3Rpb25XcmFwcGVyCmRlZiBjbXBfKHN0YWNrLCBleHByZXNzaW9uLCBk
aWN0aW9uYXJ5KToKICAgICcnJwogICAgVGhlIGNtcCBjb21iaW5hdG9yIHRha2VzIHR3byB2YWx1
ZXMgYW5kIHRocmVlIHF1b3RlZCBwcm9ncmFtcyBvbiB0aGUKICAgIHN0YWNrIGFuZCBydW5zIG9u
ZSBvZiB0aGUgdGhyZWUgZGVwZW5kaW5nIG9uIHRoZSByZXN1bHRzIG9mIGNvbXBhcmluZwogICAg
dGhlIHR3byB2YWx1ZXM6CgogICAgICAgICAgIGEgYiBbR10gW0VdIFtMXSBjbXAKICAgICAgICAt
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGEgPiBiCiAgICAgICAgICAgICAgICBHCgogICAgICAg
ICAgIGEgYiBbR10gW0VdIFtMXSBjbXAKICAgICAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
IGEgPSBiCiAgICAgICAgICAgICAgICAgICAgRQoKICAgICAgICAgICBhIGIgW0ddIFtFXSBbTF0g
Y21wCiAgICAgICAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBhIDwgYgogICAgICAgICAgICAg
ICAgICAgICAgICBMCgogICAgJycnCiAgICBMLCAoRSwgKEcsIChiLCAoYSwgc3RhY2spKSkpID0g
c3RhY2sKICAgIGV4cHJlc3Npb24gPSBwdXNoYmFjayhHIGlmIGEgPiBiIGVsc2UgTCBpZiBhIDwg
YiBlbHNlIEUsIGV4cHJlc3Npb24pCiAgICByZXR1cm4gc3RhY2ssIGV4cHJlc3Npb24sIGRpY3Rp
b25hcnkKCgpAaW5zdGFsbApAU2ltcGxlRnVuY3Rpb25XcmFwcGVyCmRlZiBsaXN0X3ZpZXdlcnMo
c3RhY2spOgogICAgJycnCiAgICBQdXQgYSBzdHJpbmcgb24gdGhlIHN0YWNrIHdpdGggc29tZSBp
bmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudGx5CiAgICBvcGVuIHZpZXdlcnMsIG9uZS1wZXIt
bGluZS4gIFRoaXMgaXMga2luZCBvZiBhIGRlbW8gZnVuY3Rpb24sIHJhdGhlcgogICAgdGhhbiBz
b21ldGhpbmcgcmVhbGx5IHVzZWZ1bC4KICAgICcnJwogICAgbGluZXMgPSBbXQogICAgZm9yIHgs
IFQgaW4gZC50cmFja3M6CiAgICAgICAgI2xpbmVzLmFwcGVuZCgneDogJWksIHc6ICVpLCAlcicg
JSAoeCwgVC53LCBUKSkKICAgICAgICBmb3IgeSwgViBpbiBULnZpZXdlcnM6CiAgICAgICAgICAg
IGxpbmVzLmFwcGVuZCgneDogJWkgeTogJWkgaDogJWkgJXIgJXInICUgKHgsIHksIFYuaCwgVi5j
b250ZW50X2lkLCBWKSkKICAgIHJldHVybiAnXG4nLmpvaW4obGluZXMpLCBzdGFjawoKCkBpbnN0
YWxsCkBTaW1wbGVGdW5jdGlvbldyYXBwZXIKZGVmIHNwbGl0bGluZXMoc3RhY2spOgogICAgJycn
CiAgICBHaXZlbiBhIHN0cmluZyBvbiB0aGUgc3RhY2sgcmVwbGFjZSBpdCB3aXRoIGEgbGlzdCBv
ZiB0aGUgbGluZXMgaW4KICAgIHRoZSBzdHJpbmcuCiAgICAnJycKICAgIHRleHQsIHN0YWNrID0g
c3RhY2sKICAgIGFzc2VydCBpc2luc3RhbmNlKHRleHQsIHN0ciksIHJlcHIodGV4dCkKICAgIHJl
dHVybiBsaXN0X3RvX3N0YWNrKHRleHQuc3BsaXRsaW5lcygpKSwgc3RhY2sKCgpAaW5zdGFsbApA
U2ltcGxlRnVuY3Rpb25XcmFwcGVyCmRlZiBoaXlhKHN0YWNrKToKICAgICcnJwogICAgRGVtbyBm
dW5jdGlvbiB0byBpbnNlcnQgIkhpIFdvcmxkISIgaW50byB0aGUgY3VycmVudCB2aWV3ZXIsIGlm
IGFueS4KICAgICcnJwogICAgaWYgZC5mb2N1c2VkX3ZpZXdlcjoKICAgICAgICBkLmZvY3VzZWRf
dmlld2VyLmluc2VydCgnSGkgV29ybGQhJykKICAgIHJldHVybiBzdGFjawpQSwMEFAAAAAAAiGR3
TEkn3hk5EAAAORAAAAsAAABzY3JhdGNoLnR4dFdoYXQgaXMgaXQ/CgpBIHNpbXBsZSBHcmFwaGlj
YWwgVXNlciBJbnRlcmZhY2UgZm9yIHRoZSBKb3kgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UsCndyaXR0
ZW4gdXNpbmcgUHlnYW1lIHRvIGJ5cGFzcyBYMTEgZXQuIGFsLiwgbW9kZWxlZCBvbiB0aGUgT2Jl
cm9uIE9TLCBhbmQKaW50ZW5kZWQgdG8gYmUganVzdCBmdW5jdGlvbmFsIGVub3VnaCB0byBzdXBw
b3J0IGJvb3RzdHJhcHBpbmcgZnVydGhlciBKb3kKZGV2ZWxvcG1lbnQuCgpJdCdzIGJhc2ljIGZ1
bmN0aW9uYWxpdHkgaXMgbW9yZS1vci1sZXNzIGFzIGEgY3J1ZGUgdGV4dCBlZGl0b3IgYWxvbmcg
d2l0aAphIHNpbXBsZSBKb3kgcnVudGltZSAoaW50ZXJwcmV0ZXIsIHN0YWNrLCBhbmQgZGljdGlv
bmFyeS4pICBJdCBhdXRvLSBzYXZlcwphbnkgbmFtZWQgZmlsZXMgKGluIGEgdmVyc2lvbmVkIGhv
bWUgZGlyZWN0b3J5KSBhbmQgeW91IGNhbiB3cml0ZSBuZXcgSm95CnByaW1pdGl2ZXMgaW4gUHl0
aG9uIGFuZCBKb3kgZGVmaW5pdGlvbnMgYW5kIGltbWVkaWF0ZWx5IGluc3RhbGwgYW5kIHVzZQp0
aGVtLCBhcyB3ZWxsIGFzIHJlY29yZGluZyB0aGVtIGZvciByZXVzZSAoYWZ0ZXIgcmVzdGFydHMu
KQoKQ3VycmVudGx5LCB0aGVyZSBhcmUgb25seSB0d28ga2luZHMgb2YgKGludGVyZXN0aW5nKSB2
aWV3ZXJzOiBUZXh0Vmlld2VycwphbmQgU3RhY2tWaWV3ZXIuIFRoZSBUZXh0Vmlld2VycyBhcmUg
Y3J1ZGUgdGV4dCBlZGl0b3JzLiAgVGhleSBwcm92aWRlCmp1c3QgZW5vdWdoIGZ1bmN0aW9uYWxp
dHkgdG8gbGV0IHRoZSB1c2VyIHdyaXRlIHRleHQgYW5kIGNvZGUgKFB5dGhvbiBhbmQKSm95KSBh
bmQgZXhlY3V0ZSBKb3kgZnVuY3Rpb25zLiAgT25lIGltcG9ydGFudCB0aGluZyB0aGV5IGRvIGlz
CmF1dG9tYXRpY2FsbHkgc2F2ZSB0aGVpciBjb250ZW50IGFmdGVyIGNoYW5nZXMuICBObyBtb3Jl
IGxvc3Qgd29yay4KClRoZSBTdGFja1ZpZXdlciBpcyBhIHNwZWNpYWxpemVkIFRleHRWaWV3ZXIg
dGhhdCBzaG93cyB0aGUgY29udGVudHMgb2YgdGhlCkpveSBzdGFjayBvbmUgbGluZSBwZXIgc3Rh
Y2sgaXRlbS4gIEl0J3MgYSB2ZXJ5IGhhbmR5IHZpc3VhbCBhaWQgdG8ga2VlcAp0cmFjayBvZiB3
aGF0J3MgZ29pbmcgb24uICBUaGVyZSdzIGFsc28gYSBsb2cudHh0IGZpbGUgdGhhdCBnZXRzIHdy
aXR0ZW4KdG8gd2hlbiBjb21tYW5kcyBhcmUgZXhlY3V0ZWQsIGFuZCBzbyByZWNvcmRzIHRoZSBs
b2cgb2YgdXNlciBhY3Rpb25zIGFuZApzeXN0ZW0gZXZlbnRzLiAgSXQgdGVuZHMgdG8gZmlsbCB1
cCBxdWlja2x5IHNvIHRoZXJlJ3MgYSByZXNldF9sb2cgY29tbWFuZAp0aGF0IGNsZWFycyBpdCBv
dXQuCgpWaWV3ZXJzIGhhdmUgImdyb3ciIGFuZCAiY2xvc2UiIGluIHRoZWlyIG1lbnUgYmFycy4g
IFRoZXNlIGFyZSBidXR0b25zLgpXaGVuIHlvdSByaWdodC1jbGljayBvbiBncm93IGEgdmlld2Vy
IGEgY29weSBpcyBjcmVhdGVkIHRoYXQgY292ZXJzIHRoYXQKdmlld2VyJ3MgZW50aXJlIHRyYWNr
LiAgSWYgeW91IGdyb3cgYSB2aWV3ZXIgdGhhdCBhbHJlYWR5IHRha2VzIHVwIGl0cwp3aG9sZSB0
cmFjayB0aGVuIGEgY29weSBpcyBjcmVhdGVkIHRoYXQgdGFrZXMgdXAgYW4gYWRkaXRpb25hbCB0
cmFjaywgdXAKdG8gdGhlIHdob2xlIHNjcmVlbi4gIENsb3NpbmcgYSB2aWV3ZXIganVzdCBkZWxl
dGVzIHRoYXQgdmlld2VyLCBhbmQgd2hlbgphIHRyYWNrIGhhcyBubyBtb3JlIHZpZXdlcnMsIGl0
IGlzIGRlbGV0ZWQgYW5kIHRoYXQgZXhwb3NlcyBhbnkgcHJldmlvdXMKdHJhY2tzIGFuZCB2aWV3
ZXJzIHRoYXQgd2VyZSBoaWRkZW4uCgooTm90ZTogaWYgeW91IGV2ZXIgY2xvc2UgYWxsIHRoZSB2
aWV3ZXJzIGFuZCBhcmUgc2l0dGluZyBhdCBhIGJsYW5rIHNjcmVlbgp3aXRoICBub3doZXJlIHRv
IHR5cGUgYW5kIGV4ZWN1dGUgY29tbWFuZHMsIHByZXNzIHRoZSBQYXVzZS9CcmVhayBrZXkuClRo
aXMgd2lsbCBvcGVuIGEgbmV3ICJ0cmFwIiB2aWV3ZXIgd2hpY2ggeW91IGNhbiB0aGVuIHVzZSB0
byByZWNvdmVyLikKCkNvcGllcyBvZiBhIHZpZXdlciBhbGwgc2hhcmUgdGhlIHNhbWUgbW9kZWwg
YW5kIHVwZGF0ZSB0aGVpciBkaXNwbGF5IGFzIGl0CmNoYW5nZXMuIChJZiB5b3UgaGF2ZSB0d28g
dmlld2VycyBvcGVuIG9uIHRoZSBzYW1lIG5hbWVkIHJlc291cmNlIGFuZCBlZGl0Cm9uZSB5b3Un
bGwgc2VlIHRoZSBvdGhlciB1cGRhdGUgYXMgeW91IHR5cGUuKQoKVUkgR3VpZGUKCmxlZnQgbW91
c2Ugc2V0cyBjdXJzb3IgaW4gdGV4dCwgaW4gbWVudSBiYXIgcmVzaXplcyB2aWV3ZXIgaW50ZXJh
Y3RpdmVseQoodGhpcyBpcyBhIGxpdHRsZSBidWdneSBpbiB0aGF0IHlvdSBjYW4gbW92ZSB0aGUg
bW91c2UgcXVpY2tseSBhbmQgZ2V0Cm91dHNpZGUgdGhlIG1lbnUsIGxlYXZpbmcgdGhlIHZpZXdl
ciBpbiB0aGUgInJlc2l6aW5nIiBzdGF0ZS4gVW50aWwgSSBmaXgKdGhpcywgdGhlIHdvcmthcm91
bmQgaXMgdG8ganVzdCBncmFiIHRoZSBtZW51IGJhciBhZ2FpbiBhbmQgd2lnZ2xlIGl0IGEKZmV3
IHBpeGVscyBhbmQgbGV0IGdvLiAgVGhpcyB3aWxsIHJlc2V0IHRoZSBtYWNoaW5lcnkuKQoKUmln
aHQgbW91c2UgZXhlY3V0ZXMgSm95IGNvbW1hbmQgKGZ1bmN0aW9ucyksIGFuZCB5b3UgY2FuIGRy
YWcgd2l0aCB0aGUKcmlnaHQgYnV0dG9uIHRvIGhpZ2hsaWdodCAod2VsbCwgdW5kZXJsaW5lKSBj
b21tYW5kcy4gIFdvcmRzIHRoYXQgYXJlbid0Cm5hbWVzIG9mIEpveSBjb21tYW5kcyB3b24ndCBi
ZSB1bmRlcmxpbmVkLiAgUmVsZWFzZSB0aGUgYnV0dG9uIHRvIGV4ZWN1dGUKdGhlIGNvbW1hbmQu
CgpUaGUgbWlkZGxlIG1vdXNlIGJ1dHRvbiAodXN1YWxseSBhIHdoZWVsIHRoZXNlIGRheXMpIHNj
cm9sbHMgdGhlIHRleHQgYnV0CnlvdSBjYW4gYWxzbyBjbGljayBhbmQgZHJhZyBhbnkgdmlld2Vy
IHdpdGggaXQgdG8gbW92ZSB0aGF0IHZpZXdlciB0bwphbm90aGVyIHRyYWNrIG9yIHRvIGEgZGlm
ZmVyZW50IGxvY2F0aW9uIGluIHRoZSBzYW1lIHRyYWNrLiAgVGhlcmUncyBubwpkaXJlY3Qgdmlz
dWFsIGZlZWRiYWNrIGZvciB0aGlzICh5ZXQpIGJ1dCB0aGF0IGRvc2VuJ3Qgc2VlbSB0byBpbXBh
aXIgaXRzCnVzZWZ1bG5lc3MuCgpGMSwgRjIgLSBzZXQgc2VsZWN0aW9uIGJlZ2luIGFuZCBlbmQg
bWFya2VycyAoY3J1ZGUgYnV0IHVzYWJsZS4pCgpGMyAtIGNvcHkgc2VsZWN0ZWQgdGV4dCB0byB0
aGUgdG9wIG9mIHRoZSBzdGFjay4KClNoaWZ0LUYzIC0gYXMgY29weSB0aGVuIHJ1biAicGFyc2Ui
IGNvbW1hbmQgb24gdGhlIHN0cmluZy4KCkY0IC0gY3V0IHNlbGVjdGVkIHRleHQgdG8gdGhlIHRv
cCBvZiB0aGUgc3RhY2suCgpTaGlmdC1GNCAtIGFzIGN1dCB0aGVuIHJ1biAicG9wIiAoZGVsZXRl
IHNlbGVjdGlvbi4pCgpKb3kKClByZXR0eSBtdWNoIGFsbCBvZiB0aGUgcmVzdCBvZiB0aGUgZnVu
Y3Rpb25hbGl0eSBvZiB0aGUgc3lzdGVtIGlzIHByb3ZpZGVkCmJ5IGV4ZWN1dGluZyBKb3kgY29t
bWFuZHMgKGFrYSBmdW5jdGlvbnMsIGFrYSAid29yZHMiIGluIEZvcnRoKSBieSByaWdodC0KY2xp
Y2tpbmcgb24gdGhlaXIgbmFtZXMgaW4gYW55IHRleHQuCgpUbyBnZXQgaGVscCBvbiBhIEpveSBm
dW5jdGlvbiBzZWxlY3QgdGhlIG5hbWUgb2YgdGhlIGZ1bmN0aW9uIGluIGEKVGV4dFZpZXdlciB1
c2luZyBGMSBhbmQgRjIsIHRoZW4gcHJlc3Mgc2hpZnQtRjMgdG8gcGFyc2UgdGhlIHNlbGVjdGlv
bi4KVGhlIGZ1bmN0aW9uIChyZWFsbHkgaXRzIFN5bWJvbCkgd2lsbCBhcHBlYXIgb24gdGhlIHN0
YWNrIGluIGJyYWNrZXRzIChhCiJxdW90ZWQgcHJvZ3JhbSIgc3VjaCBhcyAiW3BvcF0iLikgIFRo
ZW4gcmlnaHQtY2xpY2sgb24gdGhlIHdvcmQgaGVscCBpbgphbnkgVGV4dFZpZXdlciAoaWYgaXQn
cyBub3QgYWxyZWFkeSB0aGVyZSwganVzdCB0eXBlIGl0IGluIHNvbWV3aGVyZS4pClRoaXMgd2ls
bCBwcmludCB0aGUgZG9jc3RyaW5nIG9yIGRlZmluaXRpb24gb2YgdGhlIHdvcmQgKGZ1bmN0aW9u
KSB0bwpzdGRvdXQuICBBdCBzb21lIHBvaW50IEknbGwgd3JpdGUgYSB0aGluZyB0byBzZW5kIHRo
YXQgdG8gdGhlIGxvZy50eHQgZmlsZQppbnN0ZWFkLCBidXQgZm9yIG5vdyBsb29rIGZvciBvdXRw
dXQgaW4gdGhlIHRlcm1pbmFsLgpQSwMEFAAAAAAAJ1t3TJboy8NtAwAAbQMAAA8AAABkZWZpbml0
aW9ucy50eHRzZWVfc3RhY2sgPT0gZ29vZF92aWV3ZXJfbG9jYXRpb24gb3Blbl9zdGFjawpzZWVf
cmVzb3VyY2VzID09IGxpc3RfcmVzb3VyY2VzIGdvb2Rfdmlld2VyX2xvY2F0aW9uIG9wZW5fdmll
d2VyCm9wZW5fcmVzb3VyY2VfYXRfZ29vZF9sb2NhdGlvbiA9PSBnb29kX3ZpZXdlcl9sb2NhdGlv
biBvcGVuX3Jlc291cmNlCnNlZV9sb2cgPT0gImxvZy50eHQiIG9wZW5fcmVzb3VyY2VfYXRfZ29v
ZF9sb2NhdGlvbgpzZWVfZGVmaW5pdGlvbnMgPT0gImRlZmluaXRpb25zLnR4dCIgb3Blbl9yZXNv
dXJjZV9hdF9nb29kX2xvY2F0aW9uCnJvdW5kX3RvX2NlbnRzID09IDEwMCAqICsrIGZsb29yIDEw
MCAvCnJlc2V0X2xvZyA9PSAiZGVsIGxvZy5saW5lc1sxOl0gOyBsb2cuYXRfbGluZSA9IDAiIGV2
YWx1YXRlCnNlZV9tZW51ID09ICJtZW51LnR4dCIgZ29vZF92aWV3ZXJfbG9jYXRpb24gb3Blbl9y
ZXNvdXJjZQoKIyBPcmRlcmVkIEJpbmFyeSBUcmVlIGRhdGFzdHJ1Y3R1cmUgZnVuY3Rpb25zLgpC
VHJlZS1uZXcgPT0gc3dhcCBbW10gW11dIGNvbnMgY29ucwogX0JUcmVlLVAgPT0gb3ZlciBbcG9w
b3AgcG9wb3AgZmlyc3RdIG51bGxhcnkKIF9CVHJlZS1UPiA9PSBbY29ucyBjb25zIGRpcGRkXSBj
b25zIGNvbnMgY29ucyBpbmZyYQogX0JUcmVlLVQ8ID09IFtjb25zIGNvbnMgZGlwZF0gY29ucyBj
b25zIGNvbnMgaW5mcmEKIF9CVHJlZS1FID09IHBvcCBzd2FwIHJvbGw8IHJlc3QgcmVzdCBjb25z
IGNvbnMKIF9CVHJlZS1yZWN1ciA9PSBfQlRyZWUtUCBbX0JUcmVlLVQ+XSBbX0JUcmVlLUVdIFtf
QlRyZWUtVDxdIGNtcApCVHJlZS1hZGQgPT0gW3BvcG9wIG5vdF0gW1twb3BdIGRpcGQgQlRyZWUt
bmV3XSBbXSBbX0JUcmVlLXJlY3VyXSBnZW5yZWMKUEsDBBQAAAAAACdbd0zaJuqjzwQAAM8EAAAI
AAAAbWVudS50eHQgIG5hbWVfdmlld2VyCiAgbGlzdF9yZXNvdXJjZXMKICBvcGVuX3Jlc291cmNl
X2F0X2dvb2RfbG9jYXRpb24KICBnb29kX3ZpZXdlcl9sb2NhdGlvbgogIG9wZW5fdmlld2VyCiAg
c2VlX3N0YWNrCiAgc2VlX3Jlc291cmNlcwogIHNlZV9kZWZpbml0aW9ucwogIHNlZV9sb2cKICBy
ZXNldF9sb2cKCiAgaW5zY3JpYmUKICBldmFsdWF0ZQoKICBwb3AgY2xlYXIgICAgZHVwIHN3YXAK
CiAgYWRkIHN1YiBtdWwgZGl2IHRydWVkaXYgbW9kdWx1cyBkaXZtb2QKICBwbSArKyAtLSBzdW0g
cHJvZHVjdCBwb3cgc3FyIHNxcnQKICA8IDw9ID0gPj0gPiA8PgogICYgPDwgPj4KCiAgaSBkdXBk
aXAKCiE9ICUgJiAqICpmcmFjdGlvbiAqZnJhY3Rpb24wICsgKysgLSAtLSAvIDwgPDwgPD0gPD4g
PSA+ID49ID4+ID8gXgphYnMgYWRkIGFuYW1vcnBoaXNtIGFuZCBhcHAxIGFwcDIgYXBwMyBhdCBh
dmVyYWdlCmIgYmluYXJ5IGJyYW5jaApjaG9pY2UgY2xlYXIgY2xlYXZlIGNvbmNhdCBjb25zCmRp
bmZyaXJzdCBkaXAgZGlwZCBkaXBkZCBkaXNlbnN0YWNrZW4gZGl2IGRpdm1vZCBkb3duX3RvX3pl
cm8gZHJvcApkdWRpcGQgZHVwIGR1cGQgZHVwZGlwCmVuc3RhY2tlbiBlcQpmaXJzdCBmbGF0dGVu
IGZsb29yIGZsb29yZGl2CmdjZCBnZSBnZW5yZWMgZ2V0aXRlbSBncmFuZF9yZXNldCBndApoZWxw
CmkgaWQgaWZ0ZSBpbmZyYSBpbnNjcmliZQprZXlfYmluZGluZ3MKbGUgbGVhc3RfZnJhY3Rpb24g
bG9vcCBsc2hpZnQgbHQKbWFwIG1heCBtaW4gbW9kIG1vZHVsdXMgbW91c2VfYmluZGluZ3MgbXVs
Cm5lIG5lZyBub3QgbnVsbGFyeQpvZiBvciBvdmVyCnBhbSBwYXJzZSBwaWNrIHBtIHBvcCBwb3Bk
IHBvcGRkIHBvcG9wIHBvdyBwcmVkIHByaW1yZWMgcHJvZHVjdApxdW90ZWQKcmFuZ2UgcmFuZ2Vf
dG9femVybyByZW0gcmVtYWluZGVyIHJlbW92ZSByZXNldF9sb2cgcmVzdCByZXZlcnNlCnJvbGw8
IHJvbGw+IHJvbGxkb3duIHJvbGx1cCByc2hpZnQgcnVuCnNlY29uZCBzZWxlY3Qgc2hhcmluZyBz
aG93X2xvZyBzaHVudCBzaXplIHNvcnQgc3FyIHNxcnQgc3RhY2sgc3RlcApzdGVwX3plcm8gc3Vi
IHN1Y2Mgc3VtIHN3YWFjayBzd2FwIHN3b25jYXQgc3dvbnMKdGFrZSB0ZXJuYXJ5IHRoaXJkIHRp
bWVzIHRydWVkaXYgdHJ1dGh5IHR1Y2sKdW5hcnkgdW5jb25zIHVuaXF1ZSB1bml0IHVucXVvdGVk
IHVuc3RhY2sKdm9pZAp3YXJyYW50eSB3aGlsZSB3b3Jkcwp4IHhvcgp6aXAKUEsBAhQDFAAAAAAA
Rnx3TC9IQaMKAAAACgAAAAcAAAAAAAAAAAAAAICBAAAAAGxvZy50eHRQSwECFAMUAAAAAAAnW3dM
d3+aXgMAAAADAAAADAAAAAAAAAAAAAAAgIEvAAAAc3RhY2sucGlja2xlUEsBAhQDFAAAAAAAjXx3
TO0tgYRBFQAAQRUAAAoAAAAAAAAAAAAAAKSBXAAAAGxpYnJhcnkucHlQSwECFAMUAAAAAACIZHdM
SSfeGTkQAAA5EAAACwAAAAAAAAAAAAAAgIHFFQAAc2NyYXRjaC50eHRQSwECFAMUAAAAAAAnW3dM
lujLw20DAABtAwAADwAAAAAAAAAAAAAAgIEnJgAAZGVmaW5pdGlvbnMudHh0UEsBAhQDFAAAAAAA
J1t3TNom6qPPBAAAzwQAAAgAAAAAAAAAAAAAAICBwSkAAG1lbnUudHh0UEsFBgAAAAAGAAYAUwEA
ALYuAAAAAA==''')))


if __name__ == '__main__':
    print create_data()
